[{"D:\\school\\programming\\react\\mypro\\src\\index.js":"1","D:\\school\\programming\\react\\mypro\\src\\reportWebVitals.js":"2","D:\\school\\programming\\react\\mypro\\src\\App.js":"3","D:\\school\\programming\\react\\mypro\\src\\components\\Temperature.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":188,"mtime":1608420147586,"results":"8","hashOfConfig":"6"},{"size":1748,"mtime":1608475044646,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"s1qamh",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\school\\programming\\react\\mypro\\src\\index.js",[],["20","21"],"D:\\school\\programming\\react\\mypro\\src\\reportWebVitals.js",[],"D:\\school\\programming\\react\\mypro\\src\\App.js",[],"D:\\school\\programming\\react\\mypro\\src\\components\\Temperature.js",["22","23","24"],"import React, { Component } from \"react\";\r\n\r\nexport class Temperature extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      code: \"celsius\",\r\n      num1: 0,\r\n      result: 0,\r\n    };\r\n  }\r\n\r\n  num1Change = (e) => {\r\n    this.setState({\r\n      num1: e.target.value,\r\n    });\r\n  };\r\n\r\n  codeChange = (e) => {\r\n    this.setState({\r\n      code: e.target.value,\r\n    });\r\n  };\r\n\r\n  selectAndButton = () => {\r\n    return (\r\n      <div>\r\n        <select value={this.state.code} onChange={this.codeChange}>\r\n          <option value=\"celsius\">Celsius to Fahrenheit</option>\r\n          <option value=\"fahrenheit\">Fahrenheit to Celsius</option>\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          value={this.state.num1}\r\n          onChange={this.num1Change}\r\n        />\r\n        <button onClick={this.result}>Update</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  celsius = () => {\r\n    return (\r\n      <div>\r\n        <div>{this.state.result} Fahrenheit</div>\r\n        {this.selectAndButton()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  result = () => {\r\n    if (this.state.code == \"celsius\") {\r\n      this.setState({\r\n        result: (parseInt(this.state.num1) * (9 / 5) + 32).toFixed(2),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        result: ((parseInt(this.state.num1) - 32) * (5 / 9)).toFixed(2),\r\n      });\r\n    }\r\n  };\r\n\r\n  fahrenheit = () => {\r\n    return (\r\n      <div>\r\n        <div>{this.state.result} Celsius</div>\r\n        {this.selectAndButton()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.code == \"celsius\") {\r\n      return this.celsius();\r\n    } else if (this.state.code == \"fahrenheit\") {\r\n      return this.fahrenheit();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Temperature;\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":53,"column":25,"nodeType":"31","messageId":"32","endLine":53,"endColumn":27},{"ruleId":"29","severity":1,"message":"30","line":74,"column":25,"nodeType":"31","messageId":"32","endLine":74,"endColumn":27},{"ruleId":"29","severity":1,"message":"30","line":76,"column":32,"nodeType":"31","messageId":"32","endLine":76,"endColumn":34},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]